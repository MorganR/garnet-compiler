@Program
 ?sProgram (sProgram)
 oSymbolTblPushScope
 oCountPush(three)
 [ (sIdentifier)
 | *:
 @ProgramParameter
  ?sIdentifier (sIdentifier)
  oSymbolStkPushLocalIdentifier
  [ oSymbolStkChooseKind (syUndefined)
  | syUndefined:
  [ oSymbolStkChooseStandardFile (stdOutput)
  | stdOutput:
  oSymbolStkSetKind(syVariable)
  oSymbolStkLinkToStandardType(stdText)
  oTypeStkPushSymbol
  oValuePush(two)
  ] or >
  @AllocateVar
   [ oSymbolStkChooseKind (syVariable)
   | *:
   [ oTypeStkChooseKind (tpFile)
   | tpFile:
   oAllocateAlignOnWord
   oSymbolStkEnterDataAddress
   .tLiteralInteger
   oEmitValue
   % value emitted 2
   .tLiteralAddress
   oEmitDataAddress
   % value emitted 0
   .tFileDescriptor
   oAllocateDescriptor
   ] or >
   >>
  ;AllocateVar
  oSymbolTblEnter
  ] or >
  oSymbolStkPop
  oTypeStkPop
  oValuePop
  >>
 ;ProgramParameter
 }
 [ (sParmEnd)
 | sParmEnd:
 ] or >
 oCountPop
 @Block
  [ (sModule)
  | sModule:
  @ModuleDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   oSymbolStkSetKind(syModule)
   oSymbolStkEnterCodeAddress
   oTypeStkPush(tpNull)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   oSymbolTblEnter
   oSymbolTblPushScope
   @Block
    [ (sVar)
    | sVar:
    @VariableDeclarations
     oCountPush(one)
     ?sIdentifier (sIdentifier)
     @PrepareNewVarDeclaration
      oSymbolStkPushLocalIdentifier
      [ oSymbolStkChooseKind (syUndefined)
      | syUndefined:
      ] or >
      >>
     ;PrepareNewVarDeclaration
     [ (sIdentifier)
     | *:
     ] or >
     @VariableAttributes
      @TypeBody
       [ (sIdentifier)
       | *:
       @SimpleType
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ (sProcedure)
        | *:
        [ oSymbolStkChooseKind (syType)
        | syType:
        ] or >
        ] or >
        >>
       ;SimpleType
       [ oSymbolStkChooseKind (syType)
       | syType:
       oTypeStkPushSymbol
       [ oTypeStkChooseKind (tpInteger)
       | *:
       oTypeStkPush(tpNull)
       oSymbolStkPop
       ] or >
       >>
      ;TypeBody
      [ oCountChoose (one)
      | *:
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      [ oTypeStkChooseKind (tpInteger)
      | *:
      [ oTypeStkChooseTypeReference (yes)
      | *:
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      oSymbolStkPop
      oCountDecrement
      oTypeStkSwap
      }
      [ oCountChoose (zero)
      | zero:
      ] or >
      oTypeStkPop
      oTypeStkPop
      >>
     ;VariableAttributes
     oCountPop
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sProcedure)
    | sProcedure:
    @ProcedureDefinition
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     .tSkipProc
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     [ (sParmEnd)
     | *:
     oSymbolStkSetKind(syProcedure)
     oSymbolStkEnterCodeAddress
     oTypeStkPush(tpNull)
     oTypeStkSetRecursionFlag(yes)
     oTypeTblEnter
     oSymbolStkEnterTypeReference
     oSymbolTblEnter
     oSymbolTblPushScope
     @ProcedureHeading
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      @ProcedurePrologue
       @CountCopy
        oValuePushCount
        oCountPushValue
        oValuePop
        >>
       ;CountCopy
       [ oCountChoose (zero)
       | zero:
       oCountPop
       .tParmEnd
       ] or >
       oTypeStkEnterParameterCount
       oCountPop
       >>
      ;ProcedurePrologue
      >>
     ;ProcedureHeading
     @Block
      [ (sBegin)
      | *:
      ] or >
      ?sBegin (sBegin)
      @BeginStmt
       [ (sAssignmentStmt)
       | *:
       @Statement
        [ (sAssignmentStmt)
        | sAssignmentStmt:
        @AssignmentStmt
         ?sIdentifier (sIdentifier)
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         .tAssignBegin
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 4
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sInteger)
           | *:
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSetPackedComponentFlag(no)
           ] or >
           >>
          ;VariableExtension
          >>
         ;Variable
         [ oTypeStkChooseKind (tpInteger)
         | *:
         @Expression
          @Operand
           [ (sInteger)
           | sInteger:
           oValuePushInteger
           oSymbolStkPush(syExpression)
           oTypeStkPush(tpInteger)
           .tLiteralInteger
           oEmitValue
           % value emitted 1
           oValuePop
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sExpnEnd)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sExpnEnd)
           | *:
           >>
          ;BinaryOperator
          @TernaryOperator
           [ (sExpnEnd)
           | *:
           >>
          ;TernaryOperator
          [ (sExpnEnd)
          | sExpnEnd:
          ] or >
          >>
         ;Expression
         @CompareAndSwapTypes
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          oTypeStkSwap
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          ] or >
          ] or >
          >>
         ;CompareAndSwapTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tAssignInteger
         ] or >
         oSymbolStkPop
         oTypeStkPop
         oSymbolStkPop
         oTypeStkPop
         >>
        ;AssignmentStmt
        ] or >
        >>
       ;Statement
       }
       [ (sEnd)
       | sEnd:
       ] or >
       >>
      ;BeginStmt
      >>
     ;Block
     .tProcedureEnd
     oFixPopForwardBranch
     oSymbolTblUpdate
     oSymbolStkPop
     oTypeStkSetRecursionFlag(no)
     oTypeTblUpdate
     oTypeStkPop
     oSymbolTblPopScope
     >>
    ;ProcedureDefinition
    ] or >
    }
    [ (sBegin)
    | *:
    ] or >
    ?sBegin (sBegin)
    @BeginStmt
     [ (sEnd)
     | sEnd:
     ] or >
     >>
    ;BeginStmt
    >>
   ;Block
   oSymbolTblUpdate
   oSymbolStkPop
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblStripScope
   oSymbolTblMergeScope
   >>
  ;ModuleDefinition
  ] or >
  }
  [ (sBegin)
  | *:
  ] or >
  ?sBegin (sBegin)
  @BeginStmt
   [ (sCallStmt)
   | *:
   @Statement
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     #eUndefinedIdentifier
     line 9: identifier not declared
     ] or >
     [ oSymbolStkChooseKind (syUndefined)
     | *:
     #eProcedureReqd
     line 9: procedure name required
     @FlushActuals
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      >>
     ;FlushActuals
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    >>
   ;Statement
   }
   [ (sEnd)
   | sEnd:
   ] or >
   >>
  ;BeginStmt
  >>
 ;Block
 [ oSymbolTblLookupExternal (no)
 | *:
 oSymbolTblPopScope
 .tTrapBegin
 .tTrap
 oEmitTrapKind(trHalt)
 % value emitted 0
 >>
;Program
